{"version":3,"sources":["components/DisplayAll.jsx","components/PetDetail.jsx","components/PetForm.jsx","components/EditPet.jsx","App.js","serviceWorker.js","index.js"],"names":["Pets","props","useState","all","setAll","useEffect","axios","get","then","res","console","log","data","catch","err","newAll","sort","a","b","ptypeA","ptype","toLowerCase","ptypeB","to","map","pet","key","_id","name","setPet","errors","onClick","delete","navigate","description","skills","skillOne","PetForm","setName","setPType","setDescription","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","setErrors","onSubmit","e","preventDefault","newPet","post","type","onChange","target","value","properties","message","EditPet","PetToUpdate","put","App","className","DisplayAll","path","PetDetail","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.95dde0ba.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nconst Pets = props => {\r\n\r\n    const [all, setAll] = useState([]);\r\n\r\n    const getPets = () => {\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => {\r\n                console.log(res);\r\n                setAll(res.data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect( () => {\r\n        getPets();\r\n    }, []);\r\n\r\n    const newAll = all.sort(function(a, b){\r\n        var ptypeA = a.ptype.toLowerCase(), ptypeB = b.ptype.toLowerCase()\r\n        if (ptypeA < ptypeB) //sort string ascending\r\n            return -1 \r\n        if (ptypeA > ptypeB)\r\n            return 1\r\n        return 0 //default return value (no sorting)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/new\">add a pet to the shelter</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h4>These pets are looking for a home</h4>\r\n            {newAll.map(pet =>\r\n                <p key={pet._id}>{pet.name}     {pet.ptype} ||\r\n                <Link to={`/pets/${pet._id}`}>Details</Link> ||\r\n                <Link to={`/pets/${pet._id}/edit`}>Edit</Link>||\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pets;","import React, { useEffect, useState } from 'react';\r\nimport { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default props => {\r\n    const [pet, setPet] = useState({});\r\n    console.log(\"logging props below\")\r\n    console.log(props)\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => { setPet(res.data)\r\n        })\r\n            .catch(errors => console.log(errors));\r\n    }, [props._id])\r\n\r\n\r\n    const remove = () => {\r\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to=\"/\">back to home</Link><br/><br/>\r\n                <button onClick={remove}>adopt {pet.name}</button>\r\n                <h1>Pet Shelter</h1>\r\n                <h4>Details about: {pet.name} </h4>\r\n                <p><b>Pet type</b>: {pet.ptype}</p>\r\n                <p><b>Description</b>: {pet.description}</p>\r\n                <p><b>Skills</b>: {pet.skills}</p>\r\n                <p>{pet.skillOne}</p>\r\n                <p>{pet.skillOne}</p>\r\n                <p>{pet.skillOne}</p>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst PetForm = props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [ptype, setPType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skillOne, setSkillOne] = useState(\"nothing\");\r\n    const [skillTwo, setSkillTwo] = useState(\"nothing\");\r\n    const [skillThree, setSkillThree] = useState(\"nothing\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    //handler when the form is submitted\r\n    const onSubmitHandler = e => {\r\n        //prevent default behavior of the submit\r\n        e.preventDefault();\r\n        //make a post request to create a new person\r\n        const newPet = {name, ptype, description, skillOne, skillTwo, skillThree};\r\n        axios.post('http://localhost:8000/api/pets', newPet)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">back to home</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h4>Know a pet neeeding a home?</h4>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <p>\r\n                    <label>Name</label>\r\n                    <input type=\"text\" onChange = {(e)=>setName(e.target.value)}/>\r\n                    { errors.name ? errors.name.properties.message : \"\" }\r\n                </p>\r\n                <p>\r\n                    <label>Type</label>\r\n                    <input type=\"text\" onChange = {(e)=>setPType(e.target.value)}/>\r\n                    { errors.ptype ? errors.ptype.properties.message : \"\" }\r\n                </p>\r\n                <p>\r\n                    <label>Description</label>\r\n                    <textarea type=\"text\" onChange = {(e)=>setDescription(e.target.value)}></textarea>\r\n                    { errors.description ? errors.description.properties.message : \"\" }\r\n                </p>\r\n                <p>\r\n                    <label>Skill 1</label>\r\n                    <input type=\"text\" onChange = {(e)=>setSkillOne(e.target.value)}/>\r\n                    { errors.skillOne ? errors.skillOne.properties.message : \"\" }<br/>\r\n                    <label>Skill 2</label>\r\n                    <input type=\"text\" onChange = {(e)=>setSkillTwo(e.target.value)}/>\r\n                    { errors.skillTwo ? errors.skillTwo.properties.message : \"\" }<br/>\r\n                    <label>Skill 3</label>\r\n                    <input type=\"text\" onChange = {(e)=>setSkillThree(e.target.value)}/>\r\n                    { errors.skillThree ? errors.skillThree.properties.message : \"\" }<br/>\r\n                </p><br/>\r\n\r\n                <input type=\"submit\" value=\"Add Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PetForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst EditPet = props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [ptype, setPType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skillOne, setSkillOne] = useState(\"nothing\");\r\n    const [skillTwo, setSkillTwo] = useState(\"nothing\");\r\n    const [skillThree, setSkillThree] = useState(\"nothing\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setName(res.data.name);\r\n                setPType(res.data.ptype);\r\n                setDescription(res.data.description);\r\n                setSkillOne(res.data.skillOne);\r\n                setSkillTwo(res.data.skillTwo);\r\n                setSkillThree(res.data.skillThree);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const UpdatePet = e => {\r\n        e.preventDefault();\r\n        const PetToUpdate = {name, ptype, description, skillOne, skillTwo, skillThree};\r\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, PetToUpdate)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">back to home</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h4>Edit {name}</h4>\r\n            <form onSubmit={UpdatePet}>\r\n                <p>\r\n                    <label>Name</label>\r\n                    <input type=\"text\" onChange = {(e)=>setName(e.target.value)} value={name} />\r\n                    { errors.name ? errors.name.properties.message : \"\" }\r\n                </p>\r\n                <p>\r\n                    <label>Type</label>\r\n                    <input type=\"text\" onChange = {(e)=>setPType(e.target.value)} value={ptype} />\r\n                    { errors.ptype ? errors.ptype.properties.message : \"\" }\r\n                </p>\r\n                <p>\r\n                    <label>Description</label>\r\n                    <textarea type=\"text\" onChange = {(e)=>setDescription(e.target.value)} value={description} ></textarea>\r\n                    { errors.description ? errors.description.properties.message : \"\" }\r\n                </p>\r\n                <p>\r\n                    <label>Skill 1</label>\r\n                    <input type=\"text\" onChange = {(e)=>setSkillOne(e.target.value)} value={skillOne} />\r\n                    { errors.skillOne ? errors.skillOne.properties.message : \"\" }<br/>\r\n                    <label>Skill 2</label>\r\n                    <input type=\"text\" onChange = {(e)=>setSkillTwo(e.target.value)} value={skillTwo} />\r\n                    { errors.skillTwo ? errors.skillTwo.properties.message : \"\" }<br/>\r\n                    <label>Skill 3</label>\r\n                    <input type=\"text\" onChange = {(e)=>setSkillThree(e.target.value)} value={skillThree} />\r\n                    { errors.skillThree ? errors.skillThree.properties.message : \"\" }<br/>\r\n                </p><br/>\r\n\r\n                <input type=\"submit\" value=\"Edit Pet\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPet;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Router} from '@reach/router'\nimport DisplayAll from './components/DisplayAll';\nimport PetDetail from './components/PetDetail';\nimport PetForm from './components/PetForm';\nimport EditPet from './components/EditPet';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <DisplayAll path = \"/\" />\n          <PetForm path = \"/new\" />\n          <PetDetail path = \"/pets/:_id\"/>\n          <EditPet path=\"/pets/:_id/edit\" />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}